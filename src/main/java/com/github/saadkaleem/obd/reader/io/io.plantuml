@startuml

title __IO's Class Diagram__\n

  namespace  {
    namespace om.github.saadkaleem.obd.reader {
      namespace io {
        abstract class com.github.saadkaleem.obd.reader.io.AbstractGatewayService {
            {static} + NOTIFICATION_ID : int
            # ctx : Context
            # isQueueRunning : boolean
            # isRunning : boolean
            # jobsQueue : BlockingQueue<ObdCommandJob>
            # notificationManager : NotificationManager
            # queueCounter : Long
            ~ t : Thread
            {static} - TAG : String
            - binder : IBinder
            + isRunning()
            + onBind()
            + onCreate()
            + onDestroy()
            + queueEmpty()
            + queueJob()
            + setContext()
            {abstract} + startService()
            {abstract} + stopService()
            {abstract} # executeQueue()
            # showNotification()
        }
      }
    }
  }
  

  namespace  {
    namespace om.github.saadkaleem.obd.reader {
      namespace io {
        class com.github.saadkaleem.obd.reader.io.AbstractGatewayService.AbstractGatewayServiceBinder {
            + getService()
        }
      }
    }
  }
  

  namespace  {
    namespace om.github.saadkaleem.obd.reader {
      namespace io {
        class com.github.saadkaleem.obd.reader.io.BluetoothManager {
            {static} - MY_UUID : UUID
            {static} - TAG : String
            {static} + connect()
        }
      }
    }
  }
  

  namespace  {
    namespace om.github.saadkaleem.obd.reader {
      namespace io {
        class com.github.saadkaleem.obd.reader.io.LogCSVWriter {
            {static} - HEADER_CSV : String
            {static} - NAMES_COLUMNS : String[]
            {static} - NAMES_COLUMNS_ONLY_READINGS : String[]
            {static} - TAG : String
            - buf : BufferedWriter
            {static} - dir : String
            - isFirstLine : boolean
            + LogCSVWriter()
            + closeLogCSVWriter()
            + writeLineCSV()
            - addLine()
        }
      }
    }
  }
  

  namespace  {
    namespace om.github.saadkaleem.obd.reader {
      namespace io {
        class com.github.saadkaleem.obd.reader.io.MockObdGatewayService {
            {static} - TAG : String
            + startService()
            + stopService()
            # executeQueue()
        }
      }
    }
  }
  

  namespace  {
    namespace om.github.saadkaleem.obd.reader {
      namespace io {
        class com.github.saadkaleem.obd.reader.io.ObdCommandJob {
            - _command : ObdCommand
            - _id : Long
            + ObdCommandJob()
            + getCommand()
            + getId()
            + getState()
            + setId()
            + setState()
        }
      }
    }
  }
  

  namespace  {
    namespace om.github.saadkaleem.obd.reader {
      namespace io {
        enum ObdCommandJobState {
          EXECUTION_ERROR
          FINISHED
          NEW
          NOT_SUPPORTED
          QUEUE_ERROR
          RUNNING
        }
      }
    }
  }
  

  namespace  {
    namespace om.github.saadkaleem.obd.reader {
      namespace io {
        class com.github.saadkaleem.obd.reader.io.ObdGatewayService {
            ~ prefs : SharedPreferences
            {static} - TAG : String
            - binder : IBinder
            - dev : BluetoothDevice
            - sock : BluetoothSocket
            - sockFallback : BluetoothSocket
            + isRunning()
            + queueJob()
            {static} + saveLogcatToFile()
            + startService()
            + stopService()
            # executeQueue()
            - startObdConnection()
        }
      }
    }
  }
  

  namespace  {
    namespace om.github.saadkaleem.obd.reader {
      namespace io {
        class com.github.saadkaleem.obd.reader.io.ObdGatewayService.ObdGatewayServiceBinder {
            + getService()
        }
      }
    }
  }
  

  namespace  {
    namespace om.github.saadkaleem.obd.reader {
      namespace io {
        interface com.github.saadkaleem.obd.reader.io.ObdProgressListener {
            {abstract} + stateUpdate()
        }
      }
    }
  }
  

  com.github.saadkaleem.obd.reader.io.AbstractGatewayService -up-|> roboguice.service.RoboService
  com.github.saadkaleem.obd.reader.io.AbstractGatewayService +-down- com.github.saadkaleem.obd.reader.io.AbstractGatewayService.AbstractGatewayServiceBinder
  com.github.saadkaleem.obd.reader.io.AbstractGatewayService.AbstractGatewayServiceBinder -up-|> android.os.Binder
  com.github.saadkaleem.obd.reader.io.MockObdGatewayService -up-|> com.github.saadkaleem.obd.reader.io.AbstractGatewayService
  com.github.saadkaleem.obd.reader.io.ObdCommandJob o-- com.github.saadkaleem.obd.reader.io.ObdCommandJob.ObdCommandJobState : _state
  com.github.saadkaleem.obd.reader.io.ObdCommandJob +-down- com.github.saadkaleem.obd.reader.io.ObdCommandJob.ObdCommandJobState
  com.github.saadkaleem.obd.reader.io.ObdGatewayService -up-|> com.github.saadkaleem.obd.reader.io.AbstractGatewayService
  com.github.saadkaleem.obd.reader.io.ObdGatewayService +-down- com.github.saadkaleem.obd.reader.io.ObdGatewayService.ObdGatewayServiceBinder
  com.github.saadkaleem.obd.reader.io.ObdGatewayService.ObdGatewayServiceBinder -up-|> android.os.Binder


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
